{"bugs":[{"creation_time":"Thu Oct 01 05:52:54 EEST 1998","keywords":["access","helpwanted","sec508"],"see_also":[],"resolution":"FIXED","cf_blocking_fx":"---","cf_fx_iteration":"---","cf_blocking_b2g":"---","cf_status_b2g_1_4":"---","id":959,"is_open":false,"cf_qa_whiteboard":"","assigned_to_detail":{"name":"jag-mozilla@jag.dreamhost.com","real_name":"jag (Peter Annema)","id":29582,"email":"jag-mozilla@jag.dreamhost.com"},"creator_detail":{"name":"angus@formerly-netscape.com.tld","real_name":"Angus Davis","id":70,"email":"angus@formerly-netscape.com.tld"},"cf_status_firefox37":"---","priority":"P1","cf_status_firefox36":"---","classification":"Components","cf_status_firefox35":"---","version":"Trunk","cf_status_firefox34":"---","op_sys":"All","last_change_time":"Sat Apr 26 10:19:07 EEST 2014","cf_crash_signature":"","mentors_detail":[],"cf_tracking_b2g":"---","qa_contact_detail":{"name":"rakeshmishra@formerly-netscape.com.tld","real_name":"Rakesh Mishra","id":32683,"email":"rakeshmishra@formerly-netscape.com.tld"},"cf_status_b2g_2_0m":"---","status":"VERIFIED","cf_feature_b2g":"---","is_cc_accessible":true,"cf_tracking_firefox37":"---","cf_tracking_firefox36":"---","cf_tracking_relnote_b2g":"---","flags":[],"cf_status_firefox_esr31":"---","whiteboard":"done for html, needs to be done for xul","platform":"All","cf_tracking_firefox_esr31":"---","cf_blocking_fennec":"---","cf_fx_points":"---","cf_tracking_firefox35":"---","cf_tracking_firefox34":"---","alias":"Accesskey-XUL","cf_status_b2g_2_2":"---","cf_status_b2g_2_1":"---","cf_status_b2g_2_0":"---","assigned_to":"jag-mozilla@jag.dreamhost.com","summary":"[FEATURE] Accesskey attribute not implemented yet for XUL","cf_tracking_e10s":"---","cc":["aaronlev@gmail.com","andreww@formerly-netscape.com.tld","andy.edmonds@vuinteractive.com","Antti.Nayha@nixu.fi","bking@mozilla.com","bugzilla@blakeross.com","bugzilla@iwaruna.com","caustin@gmail.com","david@majda.cz","dean_tessman@hotmail.com","duncan@devilnews.de","hwaara@gmail.com","hyatt@mozilla.org","j.moz@lostava.com","jag-mozilla@jag.dreamhost.com","joki@formerly-netscape.com.tld","jrgmorrison@aol.com","jruderman@gmail.com","karnaze@formerly-netscape.com.tld","kmcclusk@formerly-netscape.com.tld","lchiang@formerly-netscape.com.tld","mpt@postinbox.com","olgam@formerly-netscape.com.tld","pete_a90@yahoo.com","racham@formerly-netscape.com.tld","ruixu@formerly-netscape.com.tld","saari@formerly-netscape.com.tld","sspitzer@mozilla.org","tingley@sundell.net","trentm@gmail.com","trudelle@acm.org","vhaarr+bmo@gmail.com","vidur@formerly-netscape.com.tld","waterson@maubi.net"],"severity":"blocker","creator":"angus@formerly-netscape.com.tld","product":"Core","depends_on":[90406,90221,94222],"cf_tracking_firefox_relnote":"---","blocks":[24413,90318,18575,24873,40759,40761,41368,51940,62703,64457,68243,68841,68899,70216,78153,78261,89143,91050,94802,104166,111031,112732,121680],"is_confirmed":true,"groups":[],"cf_last_resolved":"Fri Feb 22 05:12:41 EET 2002","url":"http://bubblegum.mcom.com/browser/standards/html-transitional/tests/area_accesskey.html","qa_contact":"rakeshmishra@formerly-netscape.com.tld","target_milestone":"mozilla0.9.9","component":"Event Handling","is_creator_accessible":true,"cc_detail":[{"name":"aaronlev@gmail.com","real_name":"Aaron Leventhal","id":10520,"email":"aaronlev@gmail.com"},{"name":"andreww@formerly-netscape.com.tld","real_name":"","id":4206,"email":"andreww@formerly-netscape.com.tld"},{"name":"andy.edmonds@vuinteractive.com","real_name":"Andy Edmonds","id":32270,"email":"andy.edmonds@vuinteractive.com"},{"name":"Antti.Nayha@nixu.fi","real_name":"Antti Näyhä","id":11411,"email":"Antti.Nayha@nixu.fi"},{"name":"bking@mozilla.com","real_name":"Brian King [:kinger]","id":5202,"email":"bking@mozilla.com"},{"name":"bugzilla@blakeross.com","real_name":"Blake Ross","id":13548,"email":"bugzilla@blakeross.com"},{"name":"bugzilla@iwaruna.com","real_name":"sairuh (rarely reading bugmail)","id":8793,"email":"bugzilla@iwaruna.com"},{"name":"caustin@gmail.com","real_name":"Chad Austin","id":29007,"email":"caustin@gmail.com"},{"name":"david@majda.cz","real_name":"David Majda","id":31993,"email":"david@majda.cz"},{"name":"dean_tessman@hotmail.com","real_name":"Dean Tessman","id":7924,"email":"dean_tessman@hotmail.com"},{"name":"duncan@devilnews.de","real_name":"Lars Linek","id":26706,"email":"duncan@devilnews.de"},{"name":"hwaara@gmail.com","real_name":"Håkan Waara","id":21544,"email":"hwaara@gmail.com"},{"name":"hyatt@mozilla.org","real_name":"David Hyatt","id":931,"email":"hyatt@mozilla.org"},{"name":"j.moz@lostava.com","real_name":"Joonas Marttila","id":39569,"email":"j.moz@lostava.com"},{"name":"jag-mozilla@jag.dreamhost.com","real_name":"jag (Peter Annema)","id":29582,"email":"jag-mozilla@jag.dreamhost.com"},{"name":"joki@formerly-netscape.com.tld","real_name":"joki (gone)","id":3827,"email":"joki@formerly-netscape.com.tld"},{"name":"jrgmorrison@aol.com","real_name":"John Morrison","id":12170,"email":"jrgmorrison@aol.com"},{"name":"jruderman@gmail.com","real_name":"Jesse Ruderman","id":11608,"email":"jruderman@gmail.com"},{"name":"karnaze@formerly-netscape.com.tld","real_name":"karnaze (gone)","id":3823,"email":"karnaze@formerly-netscape.com.tld"},{"name":"kmcclusk@formerly-netscape.com.tld","real_name":"Kevin McCluskey (gone)","id":3831,"email":"kmcclusk@formerly-netscape.com.tld"},{"name":"lchiang@formerly-netscape.com.tld","real_name":"","id":4080,"email":"lchiang@formerly-netscape.com.tld"},{"name":"mpt@postinbox.com","real_name":"Matthew Paul Thomas","id":8444,"email":"mpt@postinbox.com"},{"name":"olgam@formerly-netscape.com.tld","real_name":"Olga","id":34549,"email":"olgam@formerly-netscape.com.tld"},{"name":"pete_a90@yahoo.com","real_name":"pete","id":16807,"email":"pete_a90@yahoo.com"},{"name":"racham@formerly-netscape.com.tld","real_name":"","id":4423,"email":"racham@formerly-netscape.com.tld"},{"name":"ruixu@formerly-netscape.com.tld","real_name":"Rui Xu","id":32727,"email":"ruixu@formerly-netscape.com.tld"},{"name":"saari@formerly-netscape.com.tld","real_name":"saari (gone)","id":4318,"email":"saari@formerly-netscape.com.tld"},{"name":"sspitzer@mozilla.org","real_name":"(not reading, please use seth@sspitzer.org instead)","id":1193,"email":"sspitzer@mozilla.org"},{"name":"tingley@sundell.net","real_name":"Chase Tingley","id":25000,"email":"tingley@sundell.net"},{"name":"trentm@gmail.com","real_name":"Trent Mick","id":16769,"email":"trentm@gmail.com"},{"name":"trudelle@acm.org","real_name":"Peter Trudelle","id":4150,"email":"trudelle@acm.org"},{"name":"vhaarr+bmo@gmail.com","real_name":"Vidar Haarr (not reading bugmail)","id":44344,"email":"vhaarr+bmo@gmail.com"},{"name":"vidur@formerly-netscape.com.tld","real_name":"vidur (gone)","id":1679,"email":"vidur@formerly-netscape.com.tld"},{"name":"waterson@maubi.net","real_name":"Chris Waterson","id":3524,"email":"waterson@maubi.net"}],"mentors":[],"cf_user_story":""}],"comments":[{"is_private":false,"creation_time":"Thu Oct 01 05:52:54 EEST 1998","creator":"angus@formerly-netscape.com.tld","author":"angus@formerly-netscape.com.tld","time":"Thu Oct 01 05:52:54 EEST 1998","text":"Several tricks here to implement...  <input type=\"button\" value=\"Test\" accesskey=\"T\">  - when the user presses alt-(accesskey), the appropriate element should get focus. If an accesskey is specified, it overrides any accesskey in the viewer application. For example, if the accesskey on a form element were \"F,\" pressing \"alt-F\" would set focus on the element, not bring up the \"File\" menu.  I assume joki owns this piece of the bug...  - we should underline the first instance of the accesskey character. In the example above, the first \"T\" in the word \"Test\" would be underlined.  I assume chris or kevin or kipp or someone owns this piece of the bug...","id":3949,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jan 26 21:29:59 EET 1999","creator":"bkdelong@naw.org","author":"bkdelong@naw.org","time":"Tue Jan 26 21:29:59 EET 1999","text":"Elements that utilize attribute ACCESSKEY and suggested actions: A: Should select or activate link AREA: Should select or activate hotspot on imagemap BUTTON: Should scroll to or activate button INPUT: Depends on type- (See below list)        TEXT and PASSWORD:  Should scroll automatically to INPUT box        CHECKBOX and RADIO: Should select ofractivate/check        SUBMIT, IMAGE and RESET: Should scroll to or select button  LABEL: Should scroll to/select label  LEGEND: Should scroll to/select legend  TEXTAREA: Should scroll to/select TEXTAREA","id":3950,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Feb 03 16:08:59 EET 1999","creator":"leger@formerly-netscape.com.tld","author":"leger@formerly-netscape.com.tld","time":"Wed Feb 03 16:08:59 EET 1999","text":"Setting all current Open/Normal to M4.","id":3951,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Mar 06 06:10:59 EET 1999","creator":"paulmac@formerly-netscape.com.tld","author":"paulmac@formerly-netscape.com.tld","time":"Sat Mar 06 06:10:59 EET 1999","text":"per leger, assigning QA contacts to all open bugs without QA contacts according to list at http://bugzilla.mozilla.org/describecomponents.cgi?product=Browser","id":3952,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Mar 11 01:37:59 EET 1999","creator":"gerardok@formerly-netscape.com.tld","author":"gerardok@formerly-netscape.com.tld","time":"Thu Mar 11 01:37:59 EET 1999","text":"QA contact re-assigned to INPUT element owner.","id":3953,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Mar 24 20:35:59 EET 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Wed Mar 24 20:35:59 EET 1999","text":"*** Bug 3422 has been marked as a duplicate of this bug. ***","id":3954,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Apr 05 21:36:59 EEST 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Mon Apr 05 21:36:59 EEST 1999","text":"This is not getting done by M4.  Moving to M5.","id":3955,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun May 02 01:08:59 EEST 1999","creator":"jpbrody@water-cooler.com","author":"jpbrody@water-cooler.com","time":"Sun May 02 01:08:59 EEST 1999","text":"In the case of <a accesskey=\"a\" href=\"http://www.mozilla.org\">mozilla<\/a> Please implement this by ACTIVATING the link (loading the page) when a user presses a key, rather than giving the link focus (as IE5 does).","id":3956,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue May 18 01:49:59 EEST 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Tue May 18 01:49:59 EEST 1999","text":"Moving out to M7","id":3957,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jun 07 18:54:59 EEST 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Mon Jun 07 18:54:59 EEST 1999","text":"Moving to M8","id":3958,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 01 09:37:59 EEST 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Thu Jul 01 09:37:59 EEST 1999","text":"No time for M8","id":3959,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 27 15:33:59 EEST 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Tue Jul 27 15:33:59 EEST 1999","text":"No dependencies yelling for this so its lower priority.  Moving to M11.","id":3960,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Sep 27 23:05:59 EEST 1999","creator":"saari@formerly-netscape.com.tld","author":"saari@formerly-netscape.com.tld","time":"Mon Sep 27 23:05:59 EEST 1999","text":"Is this important for beta?  Hyatt, will the menu key listener interfer with this?","id":3961,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Sep 27 23:11:59 EEST 1999","creator":"cpratt@formerly-netscape.com.tld","author":"cpratt@formerly-netscape.com.tld","time":"Mon Sep 27 23:11:59 EEST 1999","text":"Speaking for QA (and QA only) this is unimportant for beta. angus?","id":3962,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Nov 04 18:15:59 EET 1999","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Thu Nov 04 18:15:59 EET 1999","text":"Moving multiple bugs to m12","id":3963,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Dec 01 22:15:59 EET 1999","creator":"rickg@formerly-netscape.com.tld","author":"rickg@formerly-netscape.com.tld","time":"Wed Dec 01 22:15:59 EET 1999","text":"Moving to m13 because Joki seems to be distracted.","id":3964,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Jan 15 01:59:59 EET 2000","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Sat Jan 15 01:59:59 EET 2000","text":"Moving off bugs that won't make M13","id":3965,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jan 18 02:13:59 EET 2000","creator":"ekrock@formerly-netscape.com.tld","author":"ekrock@formerly-netscape.com.tld","time":"Tue Jan 18 02:13:59 EET 2000","text":"Moving M16.","id":3966,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Feb 29 11:13:08 EET 2000","creator":"Antti.Nayha@nixu.fi","author":"Antti.Nayha@nixu.fi","time":"Tue Feb 29 11:13:08 EET 2000","text":"*** Bug 7559 has been marked as a duplicate of this bug. ***","id":213192,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Mar 01 10:38:06 EET 2000","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Wed Mar 01 10:38:06 EET 2000","text":"A couple of suggestions:  * IE's behavior for accesskeys -- selecting a link or button, rather than   activating it -- is very sensible. It prevents a malicious Web author from, for   example, doing this    <a href=\"thesamepage.html\" accesskey=\"f\"><font color=\"white\">.<\/font><\/a>   <a href=\"thesamepage.html\" accesskey=\"e\"><font color=\"white\">.<\/font><\/a>   <a href=\"thesamepage.html\" accesskey=\"v\"><font color=\"white\">.<\/font><\/a>   <a href=\"thesamepage.html\" accesskey=\"g\"><font color=\"white\">.<\/font><\/a>   <a href=\"thesamepage.html\" accesskey=\"b\"><font color=\"white\">.<\/font><\/a>   <a href=\"thesamepage.html\" accesskey=\"t\"><font color=\"white\">.<\/font><\/a>   <a href=\"thesamepage.html\" accesskey=\"h\"><font color=\"white\">.<\/font><\/a>    which would have the effect of completely, and (from the user's point of view)   inexplicably, disabling keyboard access to the Navigator menus. (Using Alt+   arrow keys would still be possible, but the user probably wouldn't realize   that.)    So, hitting an access key should select a link or button, not activate it. And   pressing Shift+Alt+accesskey should override any accesskeys in the content and   go to the menus, so that there is always a way to access a menu immediately   with the keyboard even where content uses the same access key as the menu.  * When an accesskey is used, the content should always scroll so that the widget   being manipulated is visible, before actually changing the widget state. If the   widget wasn't visible, maybe even a short delay (~0.5 s) between the scrolling   and the change in state would be nice, so that the user gets a chance to see   what's happening to the widget (preventing the `aargh! what did I just do?'   problem).  * On Mac, the modifier key for an accesskey should be Ctrl, not Option(/Alt).   Unlike Windows and Unix, MacOS uses the Option(/Alt) key for entering non-ASCII   characters, so unlike on Windows and Unix, Option shouldn't really be used for   anything else.    Some Mac apps, such as Photoshop and BBEdit, use the equivalent of accesskeys   in their dialogs. They use the Command key to get to them (e.g. Command+D =   `Don't Save'). So using Ctrl would be inconsistent with that. But Mozilla   couldn't really be consistent and use Command, because in the world outside of   dialogs, Mozilla (like other apps) uses Command for a whole lot of keyboard   shortcuts; and the usability nightmare from accesskeys conflicting with these   would be worse than the slight usability problem from being inconsistent with   other MacOS apps.    That's why I recommend Ctrl, which is little-used for anything else   on MacOS at the moment. It would even be vaguely in line with the Mac HIGs,   which say Ctrl should be used for `shortcut key sequences that the user defines   using a macro-key facility'. Replace `user' with `page author', and this is   pretty much what Mozilla would be doing.  We now return you to our regularly scheduled `Moving out to M[n+1]' comments ... ","id":214630,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Apr 25 19:42:12 EEST 2000","creator":"choess@stwing.upenn.edu","author":"choess@stwing.upenn.edu","time":"Tue Apr 25 19:42:12 EEST 2000","text":"*** Bug 33318 has been marked as a duplicate of this bug. ***","id":273675,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Apr 25 23:16:00 EEST 2000","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Tue Apr 25 23:16:00 EEST 2000","text":"Is it a security problem for keyboard-only users that pages can play with the  alt keys, or will they be able to lift alt before pressing the letter to access  the menu, on all platforms?","id":274097,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Apr 27 07:42:15 EEST 2000","creator":"Antti.Nayha@nixu.fi","author":"Antti.Nayha@nixu.fi","time":"Thu Apr 27 07:42:15 EEST 2000","text":"Nominating for nsbeta2 and adding the 'html4' keyword. Adding dependency on this bug to bug 7954 (HTML 4.0 compliance meta bug).","id":276244,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Apr 28 01:31:04 EEST 2000","creator":"leger@formerly-netscape.com.tld","author":"leger@formerly-netscape.com.tld","time":"Fri Apr 28 01:31:04 EEST 2000","text":"Per ekrock mail: \"Sigh. This falls into the category of \"important features we really better get  in by 5/16.  Since this enables accessibility by the disabled, we could increase  our exposure to a lawsuit if we don't implement this. So it's probably  nsbeta2+[5/16-].\"  Putting on [nsbeta2+][5/16] radar. ","id":277287,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Apr 28 17:23:13 EEST 2000","creator":"cpratt@formerly-netscape.com.tld","author":"cpratt@formerly-netscape.com.tld","time":"Fri Apr 28 17:23:13 EEST 2000","text":"changing QA contact","id":277780,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun May 14 23:18:16 EEST 2000","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Sun May 14 23:18:16 EEST 2000","text":"*** Bug 33318 has been marked as a duplicate of this bug. ***","id":294644,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue May 16 10:23:47 EEST 2000","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Tue May 16 10:23:47 EEST 2000","text":"Okay, this is 90% fixed.  Accesskey is in and works for everything except links.   Working on that last bit.","id":296340,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue May 16 20:29:32 EEST 2000","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","time":"Tue May 16 20:29:32 EEST 2000","text":"Rods has generously volunteered to finish this bug, which more or less means  adding Register and and UnRegister calls for accesskeys on links.","id":296818,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue May 16 20:30:50 EEST 2000","creator":"joki@formerly-netscape.com.tld","author":"joki@formerly-netscape.com.tld","attachment_id":8742,"time":"Tue May 16 20:30:50 EEST 2000","text":"Created attachment 8742 Brief acccesskey test case","id":296819,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue May 16 22:17:26 EEST 2000","creator":"rods@formerly-netscape.com.tld","author":"rods@formerly-netscape.com.tld","time":"Tue May 16 22:17:26 EEST 2000","text":"Accesskeys now work for all form controls which is the most important part of  this bug. The only part that does not work is acess keys on links, which isn't  really very important. I probably won't get this fixed today. I suggest this now  be downgraded to nsbeta2-","id":297097,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed May 17 03:12:13 EEST 2000","creator":"rods@formerly-netscape.com.tld","author":"rods@formerly-netscape.com.tld","time":"Wed May 17 03:12:13 EEST 2000","text":"now regs and unregs in SetDocument - fixed","id":297638,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu May 18 20:56:53 EEST 2000","creator":"bugzilla@iwaruna.com","author":"bugzilla@iwaruna.com","time":"Thu May 18 20:56:53 EEST 2000","text":"over to janc 9or jrgm?) to verify.","id":299690,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu May 18 21:04:22 EEST 2000","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Thu May 18 21:04:22 EEST 2000","text":"This must work for XUL as well.  Should I give myself a separate bug for XUL, or  do we want to use this bug?  ","id":299710,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu May 18 21:50:00 EEST 2000","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Thu May 18 21:50:00 EEST 2000","text":"i am now taking this bug for xul.  it's done for html, and now it needs to be  done for xul. ","id":299820,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu May 18 21:50:25 EEST 2000","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Thu May 18 21:50:25 EEST 2000","text":"taking bug... ","id":299821,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri May 19 08:31:21 EEST 2000","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Fri May 19 08:31:21 EEST 2000","text":"removing nsbeta2, since this bug is now about xul and should probably be  re-evaluated ","id":300383,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon May 22 04:44:14 EEST 2000","creator":"trudelle@acm.org","author":"trudelle@acm.org","time":"Mon May 22 04:44:14 EEST 2000","text":"moving to m18.  ","id":302001,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon May 22 23:49:16 EEST 2000","creator":"leger@formerly-netscape.com.tld","author":"leger@formerly-netscape.com.tld","time":"Mon May 22 23:49:16 EEST 2000","text":"Putting on [nsbeta2-] radar.  ","id":303062,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri May 26 08:37:10 EEST 2000","creator":"Antti.Nayha@nixu.fi","author":"Antti.Nayha@nixu.fi","time":"Fri May 26 08:37:10 EEST 2000","text":"There's still a few problems with the current implementation:  1. The access keys specified by the HTML document don't disable those of the application.  For instance, while viewing the attached test case on Linux, activating the first radio button by pressing Alt+a also activates browser's Select All function.  The same goes for Alt+l, which activates Open Web Location.  2. Access keys on links should just give the link focus, instead of following the link immediately.  See Matthew's earlier comment.  To clarify my point, let's take another example:  A long page has a navigation link at the bottom:   <a href=\"first.html\" accesskey=\"f\"><strong>F<\/strong>irst page<\/a>  This link is not visible without scrolling, so the user has no way of knowing that 'f' access key is used by the page.  Now, immediately after arriving on the page, the user presses Alt+f to bring down the File menu.  Instead (s)he's taken to the first page of the site, which makes him/her switch back to IE in frustration.  :-)  3. The first occurrence of the access key in the link text, button text or label should be highlighted.  Maybe a separate bug should be filed for this issue?","id":309285,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri May 26 11:17:22 EEST 2000","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Fri May 26 11:17:22 EEST 2000","text":"> 3. The first occurrence of the access key in the link text, button text or > label should be highlighted.  Maybe a separate bug should be filed for this > issue?  Yes. There needs to be a nice algorithm which takes a text string and an  accelerator character, and returns the most appropriate character to underline to  indicate that accelerator (with a value of 0 if the accelerator is not in the  string at all). The most appropriate character isn't necessarily the first  occurrence of that character. As much as you could determine it with an  algorithm, it is, in order: * the first occurrence of that character at the start of a word; * the first occurrence of that character at the end of a word; * the first occurrence of that character at all. ","id":309341,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri May 26 14:17:18 EEST 2000","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Fri May 26 14:17:18 EEST 2000","text":"#1 - bug 40071  #3 - How do you decide when to turn that algorithm off (for example, if I put  bold/underline on occurence of the accesskey letter that makes the most sense  to me)?  ","id":309387,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat May 27 01:23:18 EEST 2000","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Sat May 27 01:23:18 EEST 2000","text":"#2 - isn't it generally worse to accidentally submit a form than to  accidentally follow a link?  (should accesskey be disabled in e-mail? comment in bug 28327.)","id":310322,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat May 27 01:24:39 EEST 2000","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Sat May 27 01:24:39 EEST 2000","text":"Sorry if I sound argumentative.  I agree with you guys :)","id":310323,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat May 27 16:50:39 EEST 2000","creator":"Antti.Nayha@nixu.fi","author":"Antti.Nayha@nixu.fi","time":"Sat May 27 16:50:39 EEST 2000","text":"> #2 - isn't it generally worse to accidentally submit a form than to  > accidentally follow a link?  Definitely.  I think access keys shouldn't directly activate any elements - only  give them focus.  Most importantly, they should never  - follow links (<a>, <area>)  - \"push\" buttons (<button>, <input type=\"submit|reset|image|button\">)  It's true that directly activating radio buttons, checkboxes and file dialogs  (<input type=\"file\">) isn't _quite_ as disastrous from a usability viewpoint as  directly activating links and buttons.  I still think it may seriously confuse  users in some situations.  Also, for the sake of consistency, identical  behaviour between all accesskey-enabled elements might be the best way to go.  (I guess I only mentioned links in my last comment because the link was the most  obviously problematic element included in the test case.  Silly me.) ","id":310626,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jun 27 02:55:31 EEST 2000","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Tue Jun 27 02:55:31 EEST 2000","text":"Isn't this long done?","id":342432,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 28 06:00:47 EEST 2000","creator":"cpritch@mail.tcac.net","author":"cpritch@mail.tcac.net","time":"Wed Jun 28 06:00:47 EEST 2000","text":"*** Bug 43772 has been marked as a duplicate of this bug. ***","id":343772,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Jul 14 02:30:15 EEST 2000","creator":"asa@mozilla.org","author":"asa@mozilla.org","time":"Fri Jul 14 02:30:15 EEST 2000","text":"*** Bug 43772 has been marked as a duplicate of this bug. ***","id":357802,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 20 00:15:54 EEST 2000","creator":"trudelle@acm.org","author":"trudelle@acm.org","time":"Thu Jul 20 00:15:54 EEST 2000","text":"I think we'll have to live without this in current release, -> Future","id":363216,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 27 21:50:16 EEST 2000","creator":"ckritzer@formerly-netscape.com.tld","author":"ckritzer@formerly-netscape.com.tld","time":"Thu Jul 27 21:50:16 EEST 2000","text":"Mass update:  changing qacontact to ckritzer@netscape.com ","id":372973,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 10 23:19:31 EEST 2000","creator":"chrispetersen@mac.com","author":"chrispetersen@mac.com","time":"Thu Aug 10 23:19:31 EEST 2000","text":"Nominating for nsbeta3. ","id":389882,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 16 22:49:22 EEST 2000","creator":"trudelle@acm.org","author":"trudelle@acm.org","time":"Wed Aug 16 22:49:22 EEST 2000","text":"nsbeta3-.  This bug report has morphed too much, and had so many lists of suggestions and problems added to it that I don't know what it is about any more.  Please file separate bugs for any issues that you care about, and only nominate major or critical severity parts for nsbeta3, since we already have too many nasty bugs to fix in the time remaining.","id":396789,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Sep 01 22:10:34 EEST 2000","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Fri Sep 01 22:10:34 EEST 2000","text":"Anyone notice that if ACCESSKEY is set to \"C\" on a Mac, the command can be  confusing to the user?  I.E. if Command + C is pressed, will it Copy what's  highlighted or follow the ACCESSKEY link??? ","id":416815,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Sep 02 01:27:33 EEST 2000","creator":"trudelle@acm.org","author":"trudelle@acm.org","time":"Sat Sep 02 01:27:33 EEST 2000","text":"Don't know what the std says, but in practice we're planning to mimic IE4 behavior on this, the accesskey will act on the event, the menu will ignore it see bug 40071.","id":417148,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Sep 06 20:40:56 EEST 2000","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Wed Sep 06 20:40:56 EEST 2000","text":"Upon further investigation, it seems that I was right.  Command+\"A\" (Select All  on Macs) highlights the button, but also selects all.  Same goes for Command +  \"C\" doing a copy and also selecting the \"C\" button.  My recommendation would be  to change this ACCESSKEY to default to the \"Option\" key instead of the \"Command\"  key-or Control.  How about a toggle switch in Preferences?  Just tossing out  ideas.  Working on build 2000-09-04-08, MacOS 9.0.4, on file: http://slip/projects/marvin/html/button_accesskey.html ","id":421097,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Sep 06 20:51:36 EEST 2000","creator":"jrgmorrison@aol.com","author":"jrgmorrison@aol.com","time":"Wed Sep 06 20:51:36 EEST 2000","text":"Hey Dan. I suggest you file the above as a separate bug report, if it should be  done. Otherwise, it will get no attention.","id":421138,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Sep 08 22:52:39 EEST 2000","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Fri Sep 08 22:52:39 EEST 2000","text":"*** Bug 49968 has been marked as a duplicate of this bug. ***","id":425018,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Sep 09 00:16:13 EEST 2000","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Sat Sep 09 00:16:13 EEST 2000","text":"Sorry about that.  After being slapped upside the head, reopening bug and closing  959.  The difference is that 959 was a \"Not Implemented Yet\" bug, whereas this is  a \"Implemented But Not Really Working\" bug.  Any other bugs stemming from that  should be opened separately-it was getting out of control.  Moving Mac ACCESSSKEY issue to http://bugzilla.mozilla.org/show_bug.cgi?id=51940.  I also recommend we start tearing this bug into smaller more manageable  pieces...no?  There is waaaay too much going on here, I think but I'd like to  hear some input about this idea... ","id":425183,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Sep 09 01:05:03 EEST 2000","creator":"jrgmorrison@aol.com","author":"jrgmorrison@aol.com","time":"Sat Sep 09 01:05:03 EEST 2000","text":"This bug was FIXED on 5/16, but hyatt resurrected it to deal with the XUL case. However, subsequent to that, a number of HTML issues were noted. Yes, those should be filed as separate bugs. I will file a bug on hyatt specifically for any XUL issues. Then this bug can be closed out (returned to FIXED for those  issues noted up to 5/16).","id":425306,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Sep 25 19:51:35 EEST 2000","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Mon Sep 25 19:51:35 EEST 2000","text":"Updating QA Contact. ","id":446464,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Oct 04 00:14:23 EEST 2000","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Wed Oct 04 00:14:23 EEST 2000","text":"Updating Summary to reflect Status since it seems fairly relevant. ","id":460032,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Dec 08 16:30:03 EET 2000","creator":"choess@stwing.upenn.edu","author":"choess@stwing.upenn.edu","time":"Fri Dec 08 16:30:03 EET 2000","text":"Can someone with the permissions remove the 7954 block and html4 keyword?  The attached HTML testcase works fine-I think all HTML accesskey issues have moved to other bugs.","id":529752,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Dec 08 19:59:49 EET 2000","creator":"Antti.Nayha@nixu.fi","author":"Antti.Nayha@nixu.fi","time":"Fri Dec 08 19:59:49 EET 2000","text":"Yep, you're right.  Removing those.","id":529996,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Jan 06 02:08:17 EET 2001","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Sat Jan 06 02:08:17 EET 2001","text":"Nominating for the new nsbeta1 and removing old [nsbeta2-][nsbeta3-].","id":553701,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Jan 06 10:00:23 EET 2001","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Sat Jan 06 10:00:23 EET 2001","text":"While we're using Control to activate access keys in HTML (and we don't really  have any other choice), Mac OS convention is to use the Command key to activate  access keys in chrome -- e.g. many users are used to pressing Command+D for  `Don't Save' in `Save before closing?' alerts. If we follow this convention, then  XP we will need to avoid using the accesskeys A, C, Q, V, W, X, Y, and Z in  chrome where possible, since Command+ those keys does editing/closing operations.  Or we could just use Control for chrome like we do for HTML, and not have to  worry about this. ","id":554101,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun Jan 07 01:54:58 EET 2001","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Sun Jan 07 01:54:58 EET 2001","text":"I agree with mpt's comments above-in that we should be careful to not to use the  Command + [key] combinations common in editing.  Despite that, my vote is for  using Command for the chrome commands though-I would never expect to use Control  in a Mac app basically-especially being that Command is the norm for UI controls.   Oh, and underlining the accesskey in chrome would certainly go a faaaar way for  me as well (in a good way). ","id":554471,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun Jan 07 04:43:45 EET 2001","creator":"timeless@bemail.org","author":"timeless@bemail.org","time":"Sun Jan 07 04:43:45 EET 2001","text":"I'm not sure this is the right bug, but i'm tired...  Instead of worrying about both html and chrome bindings, let's worry about one  set at a time.  Basically, either you're using the browser, or you're using the content.  When  users run mozilla, it defaults to binding chrome keybindings.  There is a  single key trigger (pick a key, I like sysrq or any fkey or ` or whatever aaron  and mpt can agree on) as well as a menu trigger.  Most likely, there is a  notification/toggle in the bar that has security and online status.  A tooltip  for this explains what the current state is and has a help link/button.  When the user wants to switch to html bindings, the user presses the key, or  clicks the toggle or selects the menu item.  The indicator switches to indicate that commands will go to the document [I  think a special border or something should be given to the active region].  While html keys are bound, mozilla can based on a user stylesheet more actively  hint at their existence [possibly inlining hints].  Users can switch back to chrome using the same toggles.  I am under the impression that only letters and possibly a few other keys can  be bound by html.  So I would suggest that back and forward (accel+left,  accel+right), form submit (accel+enter), and possibly help (f1?) retain their  bindings.  Activation of this feature should display a dialog explaining what is  happening, with a check box to allow the user to not be warned again.","id":554544,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jan 09 06:11:30 EET 2001","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Tue Jan 09 06:11:30 EET 2001","text":"*** Bug 64730 has been marked as a duplicate of this bug. ***","id":556633,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Jan 19 13:35:30 EET 2001","creator":"bugzillaabuse@lorcas.com","author":"bugzillaabuse@lorcas.com","time":"Fri Jan 19 13:35:30 EET 2001","text":"REMOVING nsbeta2/3 and replacing with nsbeta1 KW.  Also clearing  Status Whiteboard of nsbeta2/3 result.  Accessibility is important.","id":569640,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jan 29 18:43:12 EET 2001","creator":"ian@hixie.ch","author":"ian@hixie.ch","time":"Mon Jan 29 18:43:12 EET 2001","text":"Reassigning QA Contact for all open and unverified bugs previously under Lorca's care to Gerardo as per phone conversation this morning.","id":579897,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Feb 12 21:05:01 EET 2001","creator":"bugzilla@iwaruna.com","author":"bugzilla@iwaruna.com","time":"Mon Feb 12 21:05:01 EET 2001","text":"should the milestone still be future here? clearing it for re-evaluation --afaik, this ought to be fixed for basic accessibility in 6.5... thx!","id":597341,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Feb 12 21:11:34 EET 2001","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Mon Feb 12 21:11:34 EET 2001","text":"I agree, this is fairly important for accessibility (although not embedding,  really).  cc'ing trudelle.","id":597360,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Feb 13 11:06:39 EET 2001","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Tue Feb 13 11:06:39 EET 2001","text":"[Really CCing Trudelle] ","id":598400,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Feb 14 12:33:55 EET 2001","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Wed Feb 14 12:33:55 EET 2001","text":"*** Bug 68769 has been marked as a duplicate of this bug. ***","id":599692,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Feb 27 05:03:36 EET 2001","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Tue Feb 27 05:03:36 EET 2001","text":"Nominating for mozilla0.9 (this blocks a whole lot of bugs).","id":613732,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Mar 03 00:42:58 EET 2001","creator":"trudelle@acm.org","author":"trudelle@acm.org","time":"Sat Mar 03 00:42:58 EET 2001","text":"->mozilla1.0, is this absolutely required for accessibility in next rev of the apps?","id":620497,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun Mar 04 05:04:18 EET 2001","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Sun Mar 04 05:04:18 EET 2001","text":"As long as every GUI element is available by tabbing, I wouldn't regard lack of  accesskeys as an accessibility blocker -- just annoying, especially if you are  keyboard-bound and {the element which has focus} and {the element you want to get  to} are far away from each other. ","id":621180,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Apr 26 22:28:47 EEST 2001","creator":"bsharma@formerly-netscape.com.tld","author":"bsharma@formerly-netscape.com.tld","time":"Thu Apr 26 22:28:47 EEST 2001","text":"The test case is attached in the url field. The accesskey works with mouse but  are not accessible through the keyboard. Pressing the key opens the menu keys  (e.g. Pressign Alt-B, opens Bookmark).","id":692379,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Apr 27 18:13:42 EEST 2001","creator":"bsharma@formerly-netscape.com.tld","author":"bsharma@formerly-netscape.com.tld","attachment_id":32434,"time":"Fri Apr 27 18:13:42 EEST 2001","text":"Created attachment 32434 The image file","id":693577,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed May 30 04:43:46 EEST 2001","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Wed May 30 04:43:46 EEST 2001","text":"*** Bug 70216 has been marked as a duplicate of this bug. ***","id":748506,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Jun 15 22:10:58 EEST 2001","creator":"madhur@formerly-netscape.com.tld","author":"madhur@formerly-netscape.com.tld","time":"Fri Jun 15 22:10:58 EEST 2001","text":"QA contact updated","id":778840,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun Jun 24 06:54:37 EEST 2001","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Sun Jun 24 06:54:37 EEST 2001","text":"*** Bug 43756 has been marked as a duplicate of this bug. ***","id":793546,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 27 05:19:51 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Wed Jun 27 05:19:51 EEST 2001","text":"I have a preliminary patch!  It does checkboxes, focuses text fields, and almost does radio buttons.  ;)  Push buttons don't work at all at the moment...  I'll investigate more.  Assigning to me.  I'll assign it to someone else if I can't complete it. ","id":798367,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 27 05:21:43 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":40242,"time":"Wed Jun 27 05:21:43 EEST 2001","text":"Created attachment 40242 preliminary","id":798368,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 27 05:28:19 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Wed Jun 27 05:28:19 EEST 2001","text":"Oh yeah, forgot to mention... There are some changes to the find search dialog in there. I used those for testing. ","id":798374,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 27 06:36:04 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Jun 27 06:36:04 EEST 2001","text":"Ok, here are some comments.  First of all, thanks for tackling this.  It's a  much needed XUL1.0 feature.  My main concern is over the way the accesskeys are hooked up.  Namely every  element ever inserted into a document (i.e., all of them) has its accesskey  attribute checked.  Two problems occur to me with the approach of doing this  from SetDocument.  The first I just mentioned, namely that you waste time doing  an extra GetAttribute string fetch for all XUL elements.  The second is a menu  issue... menus shouldn't even be searched, since their accesskeys are already  handled down a completely different code path.  I wouldn't even crawl into  menus or menubars or menuitems.  The hookup should be kept in the front end.  I would do the hookup in the  nsTextBox code.  Right now your code will hook up access keys on invisible  elements (elts with display: none).  In order to work, an accesskey has to be  visible (and therefore has to have a frame), so you can simply do the hookup in  the frame in the same code that already checks accesskeys.  That means the  content model is not the place to do this hookup, since you don't know if you  even have a front end frame object built for that content.  Similarly, in the Destroy method of nsTextBox, you can do the unhooking if it  has an accesskey.  You'll want to avoid doing all of this hooking/unhooking for text frames that  are inside menu items and menus though, since they have their own code for  accesskey.    It's also easy to handle the dynamic case by using the frame code.  Your patch  does not handle someone dynamically adding an accesskey to an element (or  changing/removing the accesskey attribute).  The frame code already has to  worry about that case, and if you patch the method that builds up the access  string, you'll handle this case without writing extra code. ","id":798452,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 27 22:33:21 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Wed Jun 27 22:33:21 EEST 2001","text":"Hyatt:  Thanks for the comments.  However, dynamic access keys don't work in HTML at the moment either (attaching a testcase).  Would you prefer that be a new bug or should it go into this (already cluttered) one?  ","id":800053,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jun 27 22:36:33 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":40362,"time":"Wed Jun 27 22:36:33 EEST 2001","text":"Created attachment 40362 dynamic HTML accesskey testcase","id":800060,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jun 28 02:52:44 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Thu Jun 28 02:52:44 EEST 2001","text":"Filed bug 88151 for modifying HTML accesskeys via the DOM. ","id":800598,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Jul 06 20:27:22 EEST 2001","creator":"choess@stwing.upenn.edu","author":"choess@stwing.upenn.edu","time":"Fri Jul 06 20:27:22 EEST 2001","text":"I don't think this bug blocks bug 41368 any longer-at least not since the switchover from HTML to XUL.","id":814676,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 10 03:52:20 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":41734,"time":"Tue Jul 10 03:52:20 EEST 2001","text":"Created attachment 41734 second attempt","id":818549,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 10 04:00:00 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Tue Jul 10 04:00:00 EEST 2001","text":"Okay, this second patch goes along with hyatt's guidelines.  Things that don't work:  for some reason, when an accesskey is pressed, buttons simply get focus and don't fire.  If I set the case sensitive checkbox in the 'find in this page' dialog's accesskey to be 'C', it doesn't work.  ","id":818556,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 10 18:13:53 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Tue Jul 10 18:13:53 EEST 2001","text":"Move the nsBoxFrame code into nsButtonBoxFrame.cpp.  This will cover radio buttons, checkboxes, and buttons, and it will ensure that random normal boxes don't waste time checking for an accesskey attribute.  It will also prevent a slew of extra hookups (e.g., menus and menuitems) from happening when they don't need to.  ","id":819450,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jul 11 01:17:46 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":41889,"time":"Wed Jul 11 01:17:46 EEST 2001","text":"Created attachment 41889 third patch","id":820513,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jul 11 01:55:00 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Wed Jul 11 01:55:00 EEST 2001","text":"That last patch works with checkboxes and pushbuttons.  Radio buttons are kinda  weird at the moment.  Dynamically changing the accesskey via the DOM works too. ","id":820575,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Jul 11 01:57:00 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Jul 11 01:57:00 EEST 2001","text":"Two comments.  (1) Don't call the nsBoxFrame::AttributeChanged method from nsButtonBox in the case where the accesskey attribute changes.  nsBoxFrame won't do anything with that attr, so avoid the extra call.  (2) Don't QI to nsIDOMXULElement to test the \"type\" of an element.  jst fairly recently added a method for querying the type, and you can ask if an element is XUL much more efficiently by using that method.  One more iteration should do it.  Great job!","id":820584,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 12 01:42:30 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":42040,"time":"Thu Jul 12 01:42:30 EEST 2001","text":"Created attachment 42040 fourth patch","id":822323,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 12 01:50:49 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Thu Jul 12 01:50:49 EEST 2001","text":"There is some funkiness going on with radiobuttons still...  I did some tracing  and the XBL behaves properly in setting |checked| on the radio button...  After  the setter for selectedItem is called, something unsets |checked| (in some  cases).  Hopefully some event/XBL guru can tell me what's happening.  More  investigation tomorrow...  hyatt:  Thanks for the feedback.  It's been really helpful in learning the  codebase.  This bug is hopefully coming to close... ","id":822331,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 12 18:11:43 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":42087,"time":"Thu Jul 12 18:11:43 EEST 2001","text":"Created attachment 42087 fifth patch","id":823139,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 12 18:17:00 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Thu Jul 12 18:17:00 EEST 2001","text":"Okay, the radio button problem was in the event state manager.  I accidentally  had a little bit of the HTML accesskey code path executing on the XUL side.   Fifth and hopefully final patch is here, can we get r= and sr=?  (bug 90221 and  bug 90406 need to be checked in first) ","id":823146,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Jul 13 22:30:57 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":42245,"time":"Fri Jul 13 22:30:57 EEST 2001","text":"Created attachment 42245 sixth patch","id":825389,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Jul 13 22:34:32 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Fri Jul 13 22:34:32 EEST 2001","text":"Okay, I like this patch the best.  It oncurs a little overhead (both processing and memory) for each XUL element, but it's much more flexible and straightforward.  in nsXULElement, you can specify which elements support accesskeys.  In the event state manager, you can define the behavior for each type of element.  This patch works (perfectly?) with textboxes, checkboxes, radio buttons, and push buttons. I've included the fixes for bug 90221 and bug 90406.  reviewers? ","id":825394,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jul 19 22:19:38 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Thu Jul 19 22:19:38 EEST 2001","text":"We can get this in for 0.9.3. ","id":833590,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jul 23 17:48:14 EEST 2001","creator":"waterson@maubi.net","author":"waterson@maubi.net","time":"Mon Jul 23 17:48:14 EEST 2001","text":"Don't do this:  +              nsXULElement* element = NS_STATIC_CAST(nsXULElement*, raw_content);   ","id":837221,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jul 23 20:32:14 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Mon Jul 23 20:32:14 EEST 2001","text":"I do not like having the accesskey code in nsBoxFrame.  I would like that moved to nsButtonBoxFrame.  Is there a reason why the code can't be moved that I am missing?  You used the IsContentOfType.  That's good, but as waterson said, I wasn't advocating eliminating the QueryInterface all together.  I just meant that your initial determination of type should use IsContentOfType.  Once you know you're a XUL elt, it's ok to QueryInterface to a XUL element (since you know it will succeed).  We're only looking to avoid the cost of missed QIs here, which is why I requested the use of IsContentOfType to ensure you didn't have HTML elts failing QIs to a XUL elt.  What is the code in XBL doing?  It looks like you've added a redundant implementation into <radio>.  <radio> should be handling selection already.  Why was this code added? ","id":837630,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jul 23 20:50:58 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Mon Jul 23 20:50:58 EEST 2001","text":"There are other non-button elements that need to have accesskey support.   Textboxes right now, and possibly more later.  One way to do it would be  putting the same code in every frame class that needed accesskey support, but  this would be a pain to maintain.  I'll fix the QI stuff.  The odd radio button behavior is addressed by bug 90406.  Basically, calling  nsXULElement::Click() on a <radio> element had very bizarre behavior.  I made a  testcase with two radio buttons and two pushbuttons.  The pushbuttons would  call click() on their respective radio buttons.  The radio group kept getting  into situations where either one button would be selected or both would be.  In today's commercial build, calling click() on a radio element doesn't do  anything at all.  Either way, that patch to XBL fixes the problem.  There are  probably a hundred other ways to fix it, and if anyone knows a better way, feel  free to comment. ","id":837714,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 24 00:55:37 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":43303,"time":"Tue Jul 24 00:55:37 EEST 2001","text":"Created attachment 43303 seventh patch","id":838291,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 24 07:12:33 EEST 2001","creator":"kerz@mozillazine.org","author":"kerz@mozillazine.org","time":"Tue Jul 24 07:12:33 EEST 2001","text":"pushing to 0.9.4 for aegis.  won't make the 0.9.3 train unfortunately...","id":838807,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Jul 24 20:37:55 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Tue Jul 24 20:37:55 EEST 2001","text":"Oops, ignore the change to checkbox.xml. ","id":839968,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 01 05:01:51 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Aug 01 05:01:51 EEST 2001","text":"Could you explain why <textbox> needs to support accesskeys?  As far as I can  tell, it doesn't need accesskey support.  It would be a label associated with  the textbox that would require accesskey support, and that would need to listen  for the accesskey and activate the elt specified by its \"for\" attribute when  the accesskey got pressed.  As far as I can tell (just ticking through the widgets that use access keys)  only button box frames and text frames with \"for\" attributes need to support  accesskeys. ","id":849654,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 01 05:16:50 EEST 2001","creator":"aaronlev@gmail.com","author":"aaronlev@gmail.com","time":"Wed Aug 01 05:16:50 EEST 2001","text":"<hyatt> heck, a separate bug could cover the \"for\" case. <hyatt> the \"for\" case hasn't been addressed by any patches. <hyatt> i want the code in boxframe moved to buttonboxframe <hyatt> right now it's in boxframe but there's a guard like <hyatt> if (i'm a checkbox, radio, textbox, or button) { do accesskey  stuff } <hyatt> but textbox doesn't support accesskeys (since you have to  use a label with a for attr for that case) <hyatt> and the other three are all buttonboxframes. <hyatt> so the code doesn't need to be in boxframe <hyatt> if it were moved to buttonboxframe you could get rid of the if  statement completely <hyatt> and just always check for accesskeys","id":849671,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 02 23:11:49 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":44472,"time":"Thu Aug 02 23:11:49 EEST 2001","text":"Created attachment 44472 eighth patch","id":854036,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 03 18:47:44 EEST 2001","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Fri Aug 03 18:47:44 EEST 2001","text":"Wow, cool. Finally all those underlined letters in Mozilla for Windows and X won't be just for giggles.  On Mac OS, however, looks like this won't work. I don't see any `#ifdef PC' or whatever in these patches, so I'm assuming you're not aware of how chrome accesskeys (as opposed to HTML accesskeys) are dealt with on Mac. Two preliminary facts: (a) The only widgets on Mac OS which take keyboard focus are text fields and     listboxes (trees and outliners). (b) the modifier key used to activate accesskeys on Mac OS is Command, which is     the same key as is used for keyboard shortcuts e.g. (Copy = Command+C).  So, here's a rough algorithm which is probably thoroughly inaccurate from a code point of view: 1.  When Command+{something} is typed, let it be handled by other event handlers     first. If it's a modal dialog, it should be taken if {something} is one of     {A, C, V, X, Z, Shift+Z}. If it's a non-modal window, then just about     everything will be taken probably (e.g. Command+N will open a new browser     window, Command+W will close the focused window, Command+O will open a     file ...). 2.  If nothing else takes it, and there's an element with that accesskey, then:     -   if it's a label for a text field or listbox, focus it;     -   if it's a checkbox, toggle it, but do not change the focus from what it         was;     -   if it's a button or radio button, activate it, but do not change the         focus from what it was;     -   if it's a label for a radio group, activate the next radio button in         the group after the one which is currently activated, but do not change         the focus from what it was;     -   if it's anything else, ignore it.  A test is to start a Composer document, enter some text, and close the window. Typing Command+D in the resulting alert should trigger the `Don't Save' button.","id":855240,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 03 22:42:01 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":44632,"time":"Fri Aug 03 22:42:01 EEST 2001","text":"Created attachment 44632 patch numero neuf","id":855757,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 03 22:44:58 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Fri Aug 03 22:44:58 EEST 2001","text":"mpt:  Sorry, I don't have a Mac.  saari?hyatt:  The latest patch has code in nsTextBoxFrame also because text box frames don't inherit off of nsBoxFrame. ","id":855769,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Aug 07 19:04:33 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Tue Aug 07 19:04:33 EEST 2001","text":"I started working on a tenth patch to address the fact that nsBoxFrame and nsTextBoxFrame could share some registration code, but it turned out that I could only factor out maybe ten lines of code, and it's not really worth it.  Reviewers? ","id":860219,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Aug 07 20:15:39 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Tue Aug 07 20:15:39 EEST 2001","text":"Ok, I'm cool with everything in this patch except for radio.xml.  That patch is incorrect for a few reasons.  First of all, <radiogroup> can contain nested boxes, etc., so you can't assume <radio>'s parentNode is a <radiogroup>.  That's true most of the time, but not necessarily all of the time.  Second, I don't understand why it's needed.  The \"command\" DOM event should fire on the <radio> when you invoke Click(), and that should bubble up to the <radiogroup>, which should have a handler in place.  Perhaps the target of the DOM event is not being set correctly when Command() is invoked programmatically?  Basically I'm thinking there's a bug somewhere but this isn't the right fix.  If you want to check in without radio.xml, sr=hyatt, but file a separate bug on the radio issue.  If you want to hold up, then we can investigate and do a new patch here.  Either is cool with me.  ","id":860336,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Aug 07 22:18:04 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Tue Aug 07 22:18:04 EEST 2001","text":"I just did some investigation, and if you don't change radio.xml, pressing a radiobutton's accesskey (calling nsXULElement::Click() on it) treats it just like a checkbox (you can have multiple items selected at a time, or none at all...).  Something is quite screwy with the event code here. ","id":860631,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 00:37:19 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":45001,"time":"Wed Aug 08 00:37:19 EEST 2001","text":"Created attachment 45001 patch #10!","id":860893,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 00:38:24 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Wed Aug 08 00:38:24 EEST 2001","text":"jag?  blake?  wanna r= me?  filed bug 94222 for the freaky radiobuttons ","id":860895,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 04:26:15 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Aug 08 04:26:15 EEST 2001","text":"I noticed one thing you could do better.  In nsTextboxFrame, it's better to check for \"for\" before \"accesskey\".  The former will be much less common than the latter, which is used in all of the menuitems (i.e., you'll slow down menus a little with the current patch, since you'll *find* an accesskey attr but won't find a \"for\" attr). ","id":861193,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 04:27:21 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Aug 08 04:27:21 EEST 2001","text":"I don't need to see another patch, but reversing the \"for\" and the \"accesskey\" would be cool.  sr=hyatt ","id":861195,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 06:46:06 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":45046,"time":"Wed Aug 08 06:46:06 EEST 2001","text":"Created attachment 45046 eleventh patch","id":861298,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 06:47:42 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Wed Aug 08 06:47:42 EEST 2001","text":"I don't have CVS access anyway, so here's the eleventh patch. ","id":861299,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 08 07:00:31 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Aug 08 07:00:31 EEST 2001","text":"One note.  Support for <label control=\"\"> is in.  Not holding up the patch, but  I don't want to see a bunch of people running around after this lands adding  <text for=\"\"> when that has been deprecated in favor of <label control=\"\">. :)  ","id":861314,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 09 02:06:47 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":45176,"time":"Thu Aug 09 02:06:47 EEST 2001","text":"Created attachment 45176 patch 12","id":862846,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 09 02:08:55 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Thu Aug 09 02:08:55 EEST 2001","text":"patch 12 has timeless's whitespace nits.  Nothing else changed. ","id":862847,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 09 14:43:13 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":45230,"time":"Thu Aug 09 14:43:13 EEST 2001","text":"Created attachment 45230 [patch] Use nsCOMPtr, get rid of redundant code, fix a few gotchas","id":863334,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 09 14:48:16 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Thu Aug 09 14:48:16 EEST 2001","text":"I went over the code with aegis and found a few things that could be done  better. After some discussion with aegis we fixed/changed a few other things,  which resulted in the latest patch (#13!). There are still a few open issues,  I'll get back on those after I've talked to hyatt. For now I think this patch is  fine. r=jag (and I'm sure r=aegis for the things I changed).","id":863338,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 09 18:14:42 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Thu Aug 09 18:14:42 EEST 2001","text":"+        nsresult rv = mContent->GetAttribute(kNameSpaceID_None, +                                             nsHTMLAtoms::_for, +                                             forAttribute);   Change the above to nsXULAtoms::control. The visibility collapsed or hidden case is not being covered.  The user-focus property is also not being checked.  We need to (if the visibility is collapse/hidden or if user-focus is not set to normal) not do the Click().  The event state manager does this on frames, so you can check the code over there to see this. ","id":863700,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 09 18:19:15 EEST 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Thu Aug 09 18:19:15 EEST 2001","text":"Basically tab panels will allow you to \"click\" objects in panels that aren't showing if we don't patch this to deal with visibility.  Yet another issue (that can be resolved in a separate bug) is the problem of crossing iframes (as is the case in the prefs panel).  You should be looking through *all* iframes in the chrome tree, so if you fail to find a registered match in one event state manager, you need to crawl (possibly both up and down) to the other event state managers (but avoid crawling into sandboxed HTML content). ","id":863719,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 10 14:29:25 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Fri Aug 10 14:29:25 EEST 2001","text":"We have no nsXULAtoms::control yet.  ;)  Should I add it?  Does it magically  Just Work in the parser? ","id":865091,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 10 14:57:53 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Fri Aug 10 14:57:53 EEST 2001","text":"I also don't know how to check visibility on a content node...  I don't think  I'm going to be able to get to a new patch today (my last day).  Anyone else  want to finish up? ","id":865132,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 10 21:36:28 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":45447,"time":"Fri Aug 10 21:36:28 EEST 2001","text":"Created attachment 45447 testcase (XUL)","id":865868,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Aug 10 21:36:58 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","attachment_id":45449,"time":"Fri Aug 10 21:36:58 EEST 2001","text":"Created attachment 45449 testcase (JS)","id":865872,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Aug 13 06:23:27 EEST 2001","creator":"aaronlev@gmail.com","author":"aaronlev@gmail.com","time":"Mon Aug 13 06:23:27 EEST 2001","text":"Now that aegis is gone, who wants to take over this code?  Jag? Aegis mentioned that you had improvements you wanted to make to this patch before it was checked in.","id":868932,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Aug 13 18:04:05 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Mon Aug 13 18:04:05 EEST 2001","text":"Taking this.","id":869410,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 22 17:49:08 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":46741,"time":"Wed Aug 22 17:49:08 EEST 2001","text":"Created attachment 46741 [patch] Umpteenth patch","id":883113,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Aug 22 17:50:37 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Wed Aug 22 17:50:37 EEST 2001","text":"This patch includes the patch in bug 94222. This won't work without that patch.  Looking for constructive comments, r= and sr=","id":883117,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Aug 23 04:02:23 EEST 2001","creator":"caustin@gmail.com","author":"caustin@gmail.com","time":"Thu Aug 23 04:02:23 EEST 2001","text":"I'm assuming you know what you're doing with the autostretch restructure.  You probably should update the comment about the |for| attribute, as it now  should be the |control| attribute.  Did you ever find out why accesskeys are registered as |PRUint32|'s?  nsEventStateManager has damn long methods.  :)  Code Complete would not be  pleased.  Try removing the <radio> special case in nsEventStateManager.cpp.  The  NS_XUL_CLICK fix should make that special case unnecessary.  Speaking of which,  the NS_XUL_CLICK code should be given r= by hyatt (or you, jag), as I'm the one  who wrote that code.  And as long as you're changing whitespace, do we really need the // releases.  Duh. comment? ","id":884447,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Aug 27 19:30:51 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Mon Aug 27 19:30:51 EEST 2001","text":"->0.9.5","id":889530,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Aug 27 19:57:43 EEST 2001","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Mon Aug 27 19:57:43 EEST 2001","text":"Wah. Why?","id":889598,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Aug 27 21:47:41 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Mon Aug 27 21:47:41 EEST 2001","text":"Too risky for 0.9.4, no immediate need for it, can wait till 0.9.5?","id":889870,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun Sep 09 09:45:07 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":48748,"time":"Sun Sep 09 09:45:07 EEST 2001","text":"Created attachment 48748 Incorporate aegis' remarks","id":910413,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sun Sep 09 09:48:11 EEST 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Sun Sep 09 09:48:11 EEST 2001","text":"Removed <radio> specialcasing, fixed comment from 'for' to 'control'. Leaving  PRUint32 \"key\" attributes and the redundant \"release\" comments for another  patch.","id":910414,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Sep 22 05:15:26 EEST 2001","creator":"aaronlev@gmail.com","author":"aaronlev@gmail.com","time":"Sat Sep 22 05:15:26 EEST 2001","text":"Jag says this is ready for r=/sr=  All the important special cases are in there, says he.  Reviewers? blake? hyatt?","id":932437,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Oct 01 18:40:10 EEST 2001","creator":"saari@formerly-netscape.com.tld","author":"saari@formerly-netscape.com.tld","time":"Mon Oct 01 18:40:10 EEST 2001","text":"upping severity to blocker since it is blocking work on several accessibility bugs","id":947302,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Oct 01 23:32:06 EEST 2001","creator":"saari@formerly-netscape.com.tld","author":"saari@formerly-netscape.com.tld","time":"Mon Oct 01 23:32:06 EEST 2001","text":"picking this up for the end game","id":948210,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Oct 05 22:37:35 EEST 2001","creator":"saari@formerly-netscape.com.tld","author":"saari@formerly-netscape.com.tld","time":"Fri Oct 05 22:37:35 EEST 2001","text":"-> 0.9.6","id":957448,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Oct 09 18:14:07 EEST 2001","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Tue Oct 09 18:14:07 EEST 2001","text":"*** Bug 103783 has been marked as a duplicate of this bug. ***","id":962607,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Oct 24 18:35:15 EEST 2001","creator":"bugzilla@iwaruna.com","author":"bugzilla@iwaruna.com","time":"Wed Oct 24 18:35:15 EEST 2001","text":"*** Bug 106339 has been marked as a duplicate of this bug. ***","id":989332,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Nov 30 05:14:18 EET 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":59807,"time":"Fri Nov 30 05:14:18 EET 2001","text":"Created attachment 59807 Patch updated to trunk","id":1049231,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Nov 30 05:14:58 EET 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":59808,"time":"Fri Nov 30 05:14:58 EET 2001","text":"Created attachment 59808 Above -buw","id":1049232,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Nov 30 05:43:08 EET 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":59811,"time":"Fri Nov 30 05:43:08 EET 2001","text":"Created attachment 59811 simple XUL testcase","id":1049254,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Nov 30 05:52:17 EET 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Nov 30 05:52:17 EET 2001","text":"For this testcase you'll need to make sure the content area is focused (click in  the textbox for example). access+e should focus the \"hello\" checkbox (we don't  support access key underlining in marked up text (e.g. xul:html) yet, the rest  of the access keys should visible.","id":1049265,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Dec 04 19:43:57 EET 2001","creator":"bugs@bengoodger.com","author":"bugs@bengoodger.com","attachment_id":59808,"time":"Tue Dec 04 19:43:57 EET 2001","text":"Comment on attachment 59808 Above -buw  r=ben@netscape.com","id":1056450,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Dec 04 21:22:28 EET 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":60367,"time":"Tue Dec 04 21:22:28 EET 2001","text":"Created attachment 60367 Update to nsBoxFrame.cpp","id":1056644,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Dec 04 21:23:05 EET 2001","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":60368,"time":"Tue Dec 04 21:23:05 EET 2001","text":"Created attachment 60368 Above, -uw","id":1056645,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Dec 05 02:42:51 EET 2001","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Wed Dec 05 02:42:51 EET 2001","text":"+ +    nsString    mOldAccessKey; +  This is unnecessary.  UnregisterAccessKey should be patched to not require that a key be specified, since only one key can be registered for an element anyway.  We don't want to bloat all box frames by 24 bytes in order to cache the old string. ","id":1057437,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Dec 27 14:28:03 EET 2001","creator":"mpt@postinbox.com","author":"mpt@postinbox.com","time":"Thu Dec 27 14:28:03 EET 2001","text":"Jag, it looks like you're still missing #ifdef PC (or #ifndef MAC) in those patches. The Control key is implemented on the Mac as the least nasty choice for accesskeys in HTML; but in XUL, either Command+accesskey should activate the controls, or nothing should. And if it's Command+accesskey, then you need what I described in comment 111.  Meanwhile, I filed bug 117068 to remove the accesskey underlining if this bug doesn't get fixed before 1.0.","id":1086148,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jan 14 16:11:36 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":64816,"time":"Mon Jan 14 16:11:36 EET 2002","text":"Created attachment 64816 Latest patch  This patch still needs some work:  - make click() generate mousedown, mouseup events in addition to click  - add method to XBL to find out whether a property is inherited:      this so we know when we should and shouldn't register accesskeys","id":1110920,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jan 14 19:50:05 EET 2002","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Mon Jan 14 19:50:05 EET 2002","text":"The XBL problem should be fixed as follows: (1) In the XUL text frame, call GetBindingParent on your content node.   (2) If you have a binding parent, then get the binding manager from the content node's document. (3) Add a new API to nsIBindingManager called IsAttributeInherited that takes the binding parent, the content node for the text frame, and an atom attribute (accesskey). (4) In the IMPL in binding manager, get the binding for the binding parent, and call IsAttributeInherited on the nsIXBLBinding.  (5) In the impl of nsXBLBinding, you will have to crawl up until you find the binding with the anonymous content.  When you hit that binding, call into the prototype binding. (6) In the prototype binding, you'll have to go to the attribute table and get the entry of all prototype elements that inherit the attribute.  These are elements in the prototype content template (i.e., the original XML document).  You'll need to use LocateInstance to get the corresponding real content node.  If the real content node that you get for one of the prototype elements matches the content node of the text frame, then return true.  Otherwise return false. ","id":1111424,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jan 14 19:52:31 EET 2002","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Mon Jan 14 19:52:31 EET 2002","text":"Never mind.  I'm an idiot.  The registration was only being done for text frames with a control attribute.  That works and avoids the need for the XBL extensions. ","id":1111434,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jan 14 21:38:50 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Mon Jan 14 21:38:50 EET 2002","text":"Back to me again :-)","id":1111750,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Jan 14 22:10:58 EET 2002","creator":"hyatt@mozilla.org","author":"hyatt@mozilla.org","time":"Mon Jan 14 22:10:58 EET 2002","text":"So the one remaining issue is to handle multi-line labels.  You need to make a new kind of frame (nsLabelFrame) instead of just creating an nsBlockFrame in nsCSSFrameConstructor.  You could just use this frame if the control attribute is present on the label.    You then need to make this label frame get and cache the accesskey (responding to updates of the accesskey attribute in its attributechanged method as well).    This label frame should have a customized paint method that first paints the block and then crawls its children looking for the first instance of the accesskey character.  It should find the coordinates of the character, compute the coordinates of an underline, and then translate those coordinates back into the parent frame's space (by offsetting as you crawl back up your parent chain).  The parent frame should then paint the underline.  If you want to optimize this code, you could cache the coordinates of the underline after reflows to avoid crawling into your children on every paint, but that could come later.  This should be fixed before 959 lands.   ","id":1111836,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jan 31 20:41:25 EET 2002","creator":"aaronlev@gmail.com","author":"aaronlev@gmail.com","time":"Thu Jan 31 20:41:25 EET 2002","text":"Hyatt, it looks like this needs sr=. Can we get this in and file a separate bug for the multi line labels?","id":1141303,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jan 31 20:44:11 EET 2002","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Thu Jan 31 20:44:11 EET 2002","text":"No, there's also the issue of getting rid of mOldAccessKey.  I did that a few weeks ago and may still have the patch if you want it.  But it's not that difficult...","id":1141313,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Jan 31 21:05:49 EET 2002","creator":"aaronlev@gmail.com","author":"aaronlev@gmail.com","time":"Thu Jan 31 21:05:49 EET 2002","text":"Blake, if you could post that I'd appreciate it. ","id":1141373,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 01:31:15 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 01 01:31:15 EET 2002","text":"I have a new version that gets rid of mOldAccessKey in the nsBoxFrame case. I'll attach that.","id":1141907,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 01:39:32 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 01 01:39:32 EET 2002","text":"Nevermind, it's already attached above. I could apply the same logic in the  nsTextBoxFrame case, if deemed necessary, but unregistering these elements is  faster when you know the accesskey (though I could store the key as a PRUnichar  instead of as a nsString).","id":1141918,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 02:04:25 EET 2002","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Fri Feb 01 02:04:25 EET 2002","text":"My patch didn't store it at all, anywhere.  It just modified nsESM::UnregisterAccessKey to retrieve the accesskey itself from the content if aKey was null.","id":1141957,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 02:07:18 EET 2002","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Fri Feb 01 02:07:18 EET 2002","text":"Also, we should use HasAttr when checking for the |control| attr, and probably |accesskey| as well.","id":1141963,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 02:18:46 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 01 02:18:46 EET 2002","text":"I'll make those changes.","id":1141978,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 02:22:17 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 01 02:22:17 EET 2002","text":"Doh, I thought about that (and forgot I thought about it), but the problem there is that when you're changing the accesskey you don't have the old accesskey to unregister on, only the new one.","id":1141982,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 02:30:45 EET 2002","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Fri Feb 01 02:30:45 EET 2002","text":"I ran into that problem too, and fixed it by putting this in nsDocument::AttributeWillChange:    if (aAttribute == nsXULAtoms::accesskey) {     nsIPresShell* shell = (nsIPresShell*) mPresShells.SafeElementAt(0);     if (shell) {       nsCOMPtr<nsIPresContext> context;       shell->GetPresContext(getter_AddRefs(context) );       if (context) {         nsCOMPtr<nsIEventStateManager> esm;         context->GetEventStateManager(getter_AddRefs(esm));         esm->UnregisterAccessKey(nsnull, aChild, nsnull);       }     }   }  perhaps hyatt can comment on whether that's lame or not.","id":1142000,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 02:37:01 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 01 02:37:01 EET 2002","text":"That would do the trick. I'll but hyatt later.","id":1142008,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 01 04:03:32 EET 2002","creator":"dean_tessman@hotmail.com","author":"dean_tessman@hotmail.com","time":"Fri Feb 01 04:03:32 EET 2002","text":"        context->GetEventStateManager(getter_AddRefs(esm));         esm->UnregisterAccessKey(nsnull, aChild, nsnull);  Is it worthwhile to do a null check on esm, or will it always be returned?","id":1142106,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Feb 11 14:07:09 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":68863,"time":"Mon Feb 11 14:07:09 EET 2002","text":"Created attachment 68863 diff -uw of patch with blake's suggestions incorporated  I thought this also worked for:  <label accesskey=\"f\" control=\"bar\">foopy<\/label> <button id=\"bar\" value=\"Bar!\"/>  but apparently I still need to add some Reg/Unreg code to whatever frame deals with the above case.","id":1160021,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Feb 11 14:16:30 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Mon Feb 11 14:16:30 EET 2002","text":"Looks like I should be able to add code similar to what's in nsBoxFrame.* to nsAreaFrame.*, but I'm hoping there's a cleaner way.","id":1160025,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Feb 18 19:11:59 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":70110,"time":"Mon Feb 18 19:11:59 EET 2002","text":"Created attachment 70110 Don't hook up element referred by control, look it up at keypress","id":1174623,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Mon Feb 18 19:12:48 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":70111,"time":"Mon Feb 18 19:12:48 EET 2002","text":"Created attachment 70111 -uw of above","id":1174627,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Feb 20 03:01:19 EET 2002","creator":"hewitt@formerly-netscape.com.tld","author":"hewitt@formerly-netscape.com.tld","attachment_id":70111,"time":"Wed Feb 20 03:01:19 EET 2002","text":"Comment on attachment 70111 -uw of above  sr=me","id":1178329,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed Feb 20 19:06:58 EET 2002","creator":"attinasi@formerly-netscape.com.tld","author":"attinasi@formerly-netscape.com.tld","attachment_id":70111,"time":"Wed Feb 20 19:06:58 EET 2002","text":"Comment on attachment 70111 -uw of above  r=attinasi for the AreaFrame changes","id":1179637,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Feb 21 02:47:26 EET 2002","creator":"asa@mozilla.org","author":"asa@mozilla.org","time":"Thu Feb 21 02:47:26 EET 2002","text":"a=asa (on behalf of drivers) for checkin to 0.9.9","id":1180945,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Feb 21 20:30:28 EET 2002","creator":"trudelle@acm.org","author":"trudelle@acm.org","time":"Thu Feb 21 20:30:28 EET 2002","text":"nsbeta1+ per ADT triage team","id":1182438,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 22 05:11:57 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 22 05:11:57 EET 2002","text":"Checked in.","id":1183615,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 22 05:12:41 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Fri Feb 22 05:12:41 EET 2002","text":".","id":1183616,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Thu Feb 28 23:47:04 EET 2002","creator":"jruderman@gmail.com","author":"jruderman@gmail.com","time":"Thu Feb 28 23:47:04 EET 2002","text":"*** Bug 113946 has been marked as a duplicate of this bug. ***","id":1196106,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Mar 02 06:05:34 EET 2002","creator":"bugzilla@blakeross.com","author":"bugzilla@blakeross.com","time":"Sat Mar 02 06:05:34 EET 2002","text":"This patch doesn't deal with tabpanel accesskeys. Was that just an oversight?","id":1198616,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Sat Mar 02 11:18:37 EET 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","time":"Sat Mar 02 11:18:37 EET 2002","text":"Yeah, that was. Could you file a new bug on that though? It shouldn't be too hard to add.","id":1198742,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Tue Apr 30 00:53:01 EEST 2002","creator":"jag-mozilla@jag.dreamhost.com","author":"jag-mozilla@jag.dreamhost.com","attachment_id":81605,"time":"Tue Apr 30 00:53:01 EEST 2002","text":"Created attachment 81605 Test case  Test case for xul file","id":1314009,"bug_id":959,"tags":[]},{"is_private":false,"creation_time":"Wed May 01 18:46:08 EEST 2002","creator":"rakeshmishra@formerly-netscape.com.tld","author":"rakeshmishra@formerly-netscape.com.tld","time":"Wed May 01 18:46:08 EEST 2002","text":"verified on the trunk build 2002-04-30-08-trunk on Windows 2000.","id":1317963,"bug_id":959,"tags":[]}]}
