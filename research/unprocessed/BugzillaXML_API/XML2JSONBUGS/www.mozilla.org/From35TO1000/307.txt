{"bugs":[{"creation_time":"Wed May 06 23:36:57 EEST 1998","keywords":[],"is_cc_accessible":true,"flags":[],"whiteboard":"","see_also":[],"resolution":"FIXED","platform":"DEC","cf_fx_points":"---","cf_fx_iteration":"---","id":307,"assigned_to":"cmanske@jivamedia.com","cc":["brade@comcast.net","briano@bluemartini.com","mcafee@gmail.com"],"summary":"another explicit cast in edtutil.cpp","severity":"trivial","creator":"berkley@cs.wustl.edu","product":"MozillaClassic","depends_on":[],"is_open":false,"blocks":[],"is_confirmed":true,"cf_qa_whiteboard":"","groups":[],"assigned_to_detail":{"name":"cmanske@jivamedia.com","real_name":"Charles Manske","id":3195,"email":"cmanske@jivamedia.com"},"creator_detail":{"name":"berkley@cs.wustl.edu","real_name":"Berkley Shands","id":2573,"email":"berkley@cs.wustl.edu"},"priority":"P3","classification":"Graveyard","cf_last_resolved":"Thu Oct 29 20:48:17 EET 1998","version":"1998-04-08","url":"","qa_contact":"","op_sys":"All","last_change_time":"Wed Apr 21 18:23:13 EEST 1999","target_milestone":"---","component":"Composer","is_creator_accessible":true,"cc_detail":[{"name":"brade@comcast.net","real_name":"Kathleen Brade","id":1678,"email":"brade@comcast.net"},{"name":"briano@bluemartini.com","real_name":"Brian Ostrom","id":1677,"email":"briano@bluemartini.com"},{"name":"mcafee@gmail.com","real_name":"Chris McAfee","id":1672,"email":"mcafee@gmail.com"}],"mentors":[],"mentors_detail":[],"cf_user_story":"","status":"VERIFIED"}],"comments":[{"is_private":false,"creation_time":"Wed May 06 23:36:57 EEST 1998","creator":"berkley@cs.wustl.edu","author":"berkley@cs.wustl.edu","time":"Wed May 06 23:36:57 EEST 1998","text":"Created by Berkley Shands (berkley@cs.wustl.edu) on Wednesday, May 6, 1998 9:36:57 AM PDT Additional Details : cxx: Warning: edtutil.cpp, line 4902: variable \"iHeight\" is used before its value is set             iHeight = (iHeight * 100) / m_iViewHeight; -----------------------^ cxx: Error: edtutil.cpp, line 5380: no instance of overloaded function \"CEditLinkManager::AdjustLink\" matches the argument list             argument types are: (ED_LinkId, char *, long, long)             pEditBuffer->linkManager.AdjustLink(linkId, pBaseURL, NULL, NULL); -------------------------------------^  fix is             pEditBuffer->linkManager.AdjustLink(linkId, pBaseURL,       (char*) NULL, (ED_HREFList *) NULL);  berkley","id":737,"bug_id":307,"tags":[]},{"is_private":false,"creation_time":"Sun Sep 06 18:36:59 EEST 1998","creator":"brade@comcast.net","author":"brade@comcast.net","time":"Sun Sep 06 18:36:59 EEST 1998","text":"reassign to cmanske@netscape.com","id":738,"bug_id":307,"tags":[]},{"is_private":false,"creation_time":"Tue Sep 08 17:42:59 EEST 1998","creator":"cmanske@jivamedia.com","author":"cmanske@jivamedia.com","time":"Tue Sep 08 17:42:59 EEST 1998","text":"Casting a NULL seems ludicrous. Does it work if you use zero (0 or 0L) instead? I also don't get the warning. Here is the code from the first assignment of iHeight to the line with the warning:         int32  iHeight = m_Rect.bottom - m_Rect.top;         int32  iPercent;          XP_Bool bDoWidth = (m_iStyle & ED_SIZE_LEFT) || (m_iStyle & ED_SIZE_RIGHT);         XP_Bool bDoHeight = (m_iStyle & ED_SIZE_TOP) || (m_iStyle & ED_SIZE_BOTTOM);          // Show only dimension(s) for whats changing: (Width vs. Height vs both)         // First part of status shows: \"Width = xx[pixesl|%of window width]\"         //  and/or similar string for Height.         //         if( bDoWidth )         {             iPercent = (iWidth * 100 ) / m_iStartWidth;             if(m_bWidthPercent)             {                 // Convert to % format                 iWidth = (iWidth * 100) / m_iParentWidth;             }              // \"Width = x\"             PR_snprintf(pMsg, 128, XP_GetString(XP_EDT_WIDTH_EQUALS), iWidth);             // \"pixels\" or \"% of window\"              strcat(pMsg, XP_GetString(m_iWidthMsgID));              // The % of original [width] and/or [height] string             // Current logic assumes constaining aspect ratio when sizing corners,             //   so separate Width, Height percentages are not shown             XP_STRCPY(pPercentOfWhat, XP_GetString(XP_EDT_WIDTH));         }         if( bDoHeight )         {             // Since corners are constrained to aspect ratio,             //  just use Width's calculation if already done             if( !bDoWidth )             {                 iPercent = (iHeight * 100 ) / m_iStartHeight;             }             if(m_bHeightPercent)             {                 iHeight = (iHeight * 100) / m_iViewHeight;             }","id":739,"bug_id":307,"tags":[]},{"is_private":false,"creation_time":"Thu Oct 29 20:48:59 EET 1998","creator":"cmanske@jivamedia.com","author":"cmanske@jivamedia.com","time":"Thu Oct 29 20:48:59 EET 1998","text":"Checked in 10/29/98","id":740,"bug_id":307,"tags":[]},{"is_private":false,"creation_time":"Fri Feb 05 16:16:59 EET 1999","creator":"glynn@formerly-netscape.com.tld","author":"glynn@formerly-netscape.com.tld","time":"Fri Feb 05 16:16:59 EET 1999","text":"marking verified against old code base","id":741,"bug_id":307,"tags":[]}]}
